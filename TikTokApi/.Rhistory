UserIDs <- data.frame(ID = c(1:136), username = usernames)
UserIDs
for(i in 1:136){
user <- usersdata.time[i]
split1 <- strsplit(user, "/")
name <- split1[[1]][4]
split2 <- strsplit(name, "_timestamps.txt")
usernames[i] <- split2[[1]][4]
}
UserIDs <- data.frame(ID = c(1:136), username = usernames)
UserIDs
#for(i in 1:136){
for(i in c(1)){
user <- usersdata.time[i]
split1 <- strsplit(user, "/")
name <- split1[[1]][4]
split2 <- strsplit(name, "_timestamps.txt")
usernames[i] <- split2[[1]][4]
}
usernames
usersdata.time <-Sys.glob("HonThesis-OdalysBar/extract-from-odalyss-list/timestamps/*")
usernames <- vector()
#for(i in 1:136){
for(i in c(1)){
user <- usersdata.time[i]
split1 <- strsplit(user, "/")
name <- split1[[1]][4]
split2 <- strsplit(name, "_timestamps.txt")
usernames[i] <- split2[[1]][4]
}
usernames
usersdata.time <-Sys.glob("HonThesis-OdalysBar/extract-from-odalyss-list/timestamps/*")
usernames <- vector()
#for(i in 1:136){
for(i in c(1)){
user <- usersdata.time[i]
user
split1 <- strsplit(user, "/")
split1
name <- split1[[1]][4]
name
split2 <- strsplit(name, "_timestamps.txt")
split2
usernames[i] <- split2[[1]][4]
}
usernames
UserIDs <- data.frame(ID = c(1:136), username = usernames)
UserIDs
usersdata.time <-Sys.glob("HonThesis-OdalysBar/extract-from-odalyss-list/timestamps/*")
usernames <- vector()
#for(i in 1:136){
for(i in c(1)){
user <- usersdata.time[i]
show(user)
split1 <- strsplit(user, "/")
show(split1)
name <- split1[[1]][4]
show(name)
split2 <- strsplit(name, "_timestamps.txt")
show(split2)
usernames[i] <- split2[[1]][4]
}
usernames
UserIDs <- data.frame(ID = c(1:136), username = usernames)
UserIDs
usersdata.time <-Sys.glob("HonThesis-OdalysBar/extract-from-odalyss-list/timestamps/*")
usernames <- vector()
#for(i in 1:136){
for(i in c(1)){
user <- usersdata.time[i]
show(user)
split1 <- strsplit(user, "/")
show(split1)
name <- split1[[1]][4]
show(name)
split2 <- strsplit(name, "_timestamps.txt")
show(split2)
usernames[i] <- split2[[1]][1]
}
usernames
UserIDs <- data.frame(ID = c(1:136), username = usernames)
UserIDs
usersdata.time <-Sys.glob("HonThesis-OdalysBar/extract-from-odalyss-list/timestamps/*")
usernames <- vector()
for(i in 1:136){
#for(i in c(1)){
user <- usersdata.time[i]
split1 <- strsplit(user, "/")
name <- split1[[1]][4]
split2 <- strsplit(name, "_timestamps.txt")
usernames[i] <- split2[[1]][1]
}
usernames
UserIDs <- data.frame(ID = c(1:136), username = usernames)
UserIDs
UserIDs <- data.frame(ID = c(1:136), username = usernames, category = NA)
UserIDs <- data.frame(ID = c(1:136), username = usernames, category = NA)
UserIDs
read.table("famous-users-1.txt")
file("famous-users-1.txt")
table("famous-users-1.txt")
read.table("famous-users-1.txt")
read.file("famous-users-1.txt")
readLines("famous-users-1.txt")
readline("famous-users-1.txt")
readline("famous-users-1.txt")
fam1 <- read.table("famous-users-1.txt", header=FALSE)
getwd()
my_data <- read_tsv("/Users/odalysbar/Documents/HonorsThesis/HonorsThesis-TikTok/TikTokApi/HonThesis-OdalysBar/extract-from-odalyss-list/famous-users-1.txt")
my_data <- read_tsv("/Users/odalysbar/Documents/HonorsThesis/HonorsThesis-TikTok/TikTokApi/HonThesis-OdalysBar/extract-from-odalyss-list/famous-users-1.txt")
getwd()
my_data <- read_tsv("Users/odalysbar/Documents/HonorsThesis/HonorsThesis-TikTok/TikTokApi/HonThesis-OdalysBar/extract-from-odalyss-list/famous-users-1.txt")
my_data <- read.table("Users/odalysbar/Documents/HonorsThesis/HonorsThesis-TikTok/TikTokApi/HonThesis-OdalysBar/extract-from-odalyss-list/famous-users-1.txt")
# Loading
library("readr")
my_data <- read.table("Users/odalysbar/Documents/HonorsThesis/HonorsThesis-TikTok/TikTokApi/HonThesis-OdalysBar/extract-from-odalyss-list/famous-users-1.txt")
my_data <- read_tsv("Users/odalysbar/Documents/HonorsThesis/HonorsThesis-TikTok/TikTokApi/HonThesis-OdalysBar/extract-from-odalyss-list/famous-users-1.txt")
getwd()
my_data <- read_tsv("HonThesis-OdalysBar/extract-from-odalyss-list/famous-users-1.txt")
my_data
getwd()
#install.packages("readr")
# Loading
library("readr")
my_data <- read_tsv("HonThesis-OdalysBar/extract-from-odalyss-list/famous-users-1.txt".header=FALSE)
my_data <- read_tsv("HonThesis-OdalysBar/extract-from-odalyss-list/famous-users-1.txt",header=FALSE)
my_data <- read_tsv("HonThesis-OdalysBar/extract-from-odalyss-list/famous-users-1.txt" ,header=FALSE)
?read_tsv
my_data <- read_tsv("HonThesis-OdalysBar/extract-from-odalyss-list/famous-users-1.txt" ,col_names=FALSE)
my_data
39+25
getwd()
#install.packages("readr")
# Loading
library("readr")
fam1 <- read_tsv("HonThesis-OdalysBar/extract-from-odalyss-list/famous-users-1.txt" ,col_names=FALSE)
fam2 <- read_tsv("HonThesis-OdalysBar/extract-from-odalyss-list/famous-users-2.txt" ,col_names=FALSE)
viral <- read_tsv("HonThesis-OdalysBar/extract-from-odalyss-list/viral-users.txt" ,col_names=FALSE)
foryou <- read_tsv("HonThesis-OdalysBar/extract-from-odalyss-list/foryouusers.txt" ,col_names=FALSE)
fam1 <- read_tsv("HonThesis-OdalysBar/extract-from-odalyss-list/famous-users-1.txt" ,col_names=usernames)
getwd()
#install.packages("readr")
# Loading
library("readr")
fam1 <- read_tsv("HonThesis-OdalysBar/extract-from-odalyss-list/famous-users-1.txt" ,col_names=FALSE)
fam2 <- read_tsv("HonThesis-OdalysBar/extract-from-odalyss-list/famous-users-2.txt" ,col_names=FALSE)
viral <- read_tsv("HonThesis-OdalysBar/extract-from-odalyss-list/viral-users.txt" ,col_names=FALSE)
foryou <- read_tsv("HonThesis-OdalysBar/extract-from-odalyss-list/foryouusers.txt" ,col_names=FALSE)
which(UserIDs$username == fam1[1])
which(UserIDs$username == fam1[1])
fam1[1]
fam1[1]
which(UserIDs$username == fam1[1,])
fam1[1,]
which(UserIDs$username == fam1[1,])
UserIDs$username
"420doggface208" == "420doggface208"
which(UserIDs$username == fam1[2,])
which(UserIDs$username == fam1[3,])
which(UserIDs$username == fam1[4,])
fam1[4,]
as.character(fam1[4,])
which(UserIDs$username == as.character(fam1[4,]))
which(UserIDs$username == as.character(fam1[1,]))
which(UserIDs$username == as.character(fam1[2,]))
which(UserIDs$username == as.character(fam1[3,]))
length(fam1)
for(i in 1:length(fam1[,1]))
length(fam1[,1])
length(fam1[,1])
for(i in 1:39){
if(which(UserIDs$username == as.character(fam1[i,]))){
index <- which(UserIDs$username == as.character(fam1[i,]))
UserIDs$category[i] <- "Famous"
}else{
UserIDs$category[i] <- NA
}
}
for(i in 1:39){
if(which(UserIDs$username == as.character(fam1[i,])) > 0){
index <- which(UserIDs$username == as.character(fam1[i,]))
UserIDs$category[i] <- "Famous"
}else{
UserIDs$category[i] <- NA
}
}
which(UserIDs$username == as.character(fam1[i,])) > 0
which(UserIDs$username == as.character(fam1[1,])) > 0
for(i in 1:39){
if(which(UserIDs$username == as.character(fam1[i,])) > 0){
index <- which(UserIDs$username == as.character(fam1[i,]))
UserIDs$category[i] <- "Famous"
}else{
UserIDs$category[i] <- NA
}
}
which(UserIDs$username == as.character(fam1[1,])) > 0
logical(0)
for(i in 1:39){
if(which(UserIDs$username == as.character(fam1[i,])) == logical(0)){
UserIDs$category[i] <- NA
}else{
index <- which(UserIDs$username == as.character(fam1[i,]))
UserIDs$category[i] <- "Famous"
}
}
which(UserIDs$username == as.character(fam1[1,]))
for(i in 1:39){
if(which(UserIDs$username == as.character(fam1[i,])) == integer(0)){
UserIDs$category[i] <- NA
}else{
index <- which(UserIDs$username == as.character(fam1[i,]))
UserIDs$category[i] <- "Famous"
}
}
which(UserIDs$username == as.character(fam1[1,])) == integer(0)
which(UserIDs$username == as.character(fam1[1,])) )
which(UserIDs$username == as.character(fam1[1,]))
which(UserIDs$username == as.character(fam1[1,]))
which(UserIDs$username == as.character(fam1[1,])) == integer(0)
integer(0)
for(i in 2:39){
if(which(UserIDs$username == as.character(fam1[i,])) == integer(0)){
UserIDs$category[i] <- NA
}else{
index <- which(UserIDs$username == as.character(fam1[i,]))
UserIDs$category[i] <- "Famous"
}
}
for(i in 2:39){
if(which(UserIDs$username == as.character(fam1[i,])) > 0 ){
index <- which(UserIDs$username == as.character(fam1[i,]))
UserIDs$category[i] <- "Famous"
UserIDs$category[i] <- NA
}else{
UserIDs$category[i] <- NA
}
}
for(i in 2:39){
index <- which(UserIDs$username == as.character(fam1[i,]))
UserIDs$category[i] <- "Famous"
}
which(UserIDs$username == as.character(fam1[1,])) == integer(0)
UserIDs
View(UserIDs)
for(i in 2:39){
index <- which(UserIDs$username == as.character(fam1[2,]))
UserIDs$category[index] <- "Famous"
}
View(UserIDs)
for(i in 1:39){
index <- which(UserIDs$username == as.character(fam1[2,]))
UserIDs$category[index] <- "Famous"
}
View(UserIDs)
usersdata.time <-Sys.glob("HonThesis-OdalysBar/extract-from-odalyss-list/timestamps/*")
usernames <- vector()
for(i in 1:136){
#for(i in c(1)){
user <- usersdata.time[i]
split1 <- strsplit(user, "/")
name <- split1[[1]][4]
split2 <- strsplit(name, "_timestamps.txt")
usernames[i] <- split2[[1]][1]
}
usernames
UserIDs <- data.frame(ID = c(1:136), username = usernames, category = NA)
UserIDs
for(i in 1:39){
index <- which(UserIDs$username == as.character(fam1[2,]))
UserIDs$category[index] <- "Famous"
}
View(UserIDs)
for(i in 1:39){
index <- which(UserIDs$username == as.character(fam1[i,]))
UserIDs$category[index] <- "Famous"
}
View(UserIDs)
for(i in 1:39){
index <- which(UserIDs$username == as.character(fam2[i,]))
UserIDs$category[index] <- "Famous"
}
View(UserIDs)
for(i in 1:39){
index <- which(UserIDs$username == as.character(viral[i,]))
UserIDs$category[index] <- "Viral"
}
View(UserIDs)
for(i in 1:39){
index <- which(UserIDs$username == as.character(foryou[i,]))
UserIDs$category[index] <- "ForYou"
}
View(UserIDs)
UserIDs$category[11] <- "ForYou"
UserIDs$category[33] <- "ForYou"
UserIDs$category[40] <- "ForYou"
UserIDs$category[47] <- "ForYou"
UserIDs$category[50] <- "ForYou"
UserIDs$category[51] <- "ForYou"
UserIDs$category[89] <- "ForYou"
UserIDs$category[129] <- "ForYou"
library(readr)
Mehrkam_CleanData <- read_csv("~/Documents/MA321-FA21/Mehrkam-CleanData.csv")
View(Mehrkam_CleanData)
impactData <- data.frame(Mehrkam_CleanData$Image1:Mehrkam_CleanData$Image8)
impactData
impactData <- data.frame(Mehrkam_CleanData$Image1,Mehrkam_CleanData$Image8)
impactData
impactData <- data.frame(Mehrkam_CleanData$Image1,Mehrkam_CleanData$Image2,Mehrkam_CleanData$Image3,Mehrkam_CleanData$Image4,Mehrkam_CleanData$Image5,,Mehrkam_CleanData$Image6, Mehrkam_CleanData$Image7, Mehrkam_CleanData$Image8)
impactData <- data.frame(Mehrkam_CleanData$Image1,Mehrkam_CleanData$Image2) #,Mehrkam_CleanData$Image3,Mehrkam_CleanData$Image4,Mehrkam_CleanData$Image5,,Mehrkam_CleanData$Image6, Mehrkam_CleanData$Image7, Mehrkam_CleanData$Image8)
impactData
impactData <- data.frame(Mehrkam_CleanData$Image1,Mehrkam_CleanData$Image2),Mehrkam_CleanData$Image3)#,Mehrkam_CleanData$Image4,Mehrkam_CleanData$Image5,,Mehrkam_CleanData$Image6, Mehrkam_CleanData$Image7, Mehrkam_CleanData$Image8)
impactData <- data.frame(Mehrkam_CleanData$Image1,Mehrkam_CleanData$Image2,Mehrkam_CleanData$Image3)#,Mehrkam_CleanData$Image4,Mehrkam_CleanData$Image5,,Mehrkam_CleanData$Image6, Mehrkam_CleanData$Image7, Mehrkam_CleanData$Image8)
impactData <- data.frame(Mehrkam_CleanData$Image1,Mehrkam_CleanData$Image2,Mehrkam_CleanData$Image3,Mehrkam_CleanData$Image4) #,Mehrkam_CleanData$Image5,,Mehrkam_CleanData$Image6, Mehrkam_CleanData$Image7, Mehrkam_CleanData$Image8)
impactData <- data.frame(Mehrkam_CleanData$Image1,Mehrkam_CleanData$Image2,Mehrkam_CleanData$Image3,Mehrkam_CleanData$Image4,Mehrkam_CleanData$Image5,Mehrkam_CleanData$Image6, Mehrkam_CleanData$Image7, Mehrkam_CleanData$Image8)
impactData
impactData <- data.frame(Distress1 = Mehrkam_CleanData$Image1,Natural1= Mehrkam_CleanData$Image2, Distress2 = Mehrkam_CleanData$Image3,Natural2 = Mehrkam_CleanData$Image4,Distress3 = Mehrkam_CleanData$Image5,Natural3=Mehrkam_CleanData$Image6,Distress4 = Mehrkam_CleanData$Image7, Natural4=Mehrkam_CleanData$Image8)
impactData
his(impactData$Distress1[355:391,])
hist(impactData$Distress1[355:391,])
impactData$Distress1[355:391,]
impactData$Distress1[1,]
impactData$Distress1[1]
hist(impactData$Distress1[355:391])
hist(impactData$Distress2[355:391])
hist(impactData$Natural1[355:391])
hist(impactData$Distress1[355:391])
hist(impactData$Natural1[355:391])
hist(impactData$Distress2[355:391])
hist(impactData$Natural2[355:391])
hist(impactData$Distress1[1:38])
hist(impactData$Natural1[1:38])
hist(impactData$Distress2[1:38])
hist(impactData$Natural2[1:38])
Distress <- c(1,3,5,7)
impactData[i,Distress]
impactData[1,Distress]
impactData[1,Natural]
Natural <- c(2,4,6,8)
impactData[1,Natural]
mean(impactData[1,Distress])
mean(impactData[1,Distress])
mean(as.vector(impactData[1,Distress]))
mean(as.vector(impactData[1,Distress]))
impactData[1,Distress]
x <-impactData[1,Distress]
x
mean(x )
mean(x[1,] )
mean(x[1,] )
View(x)
mean(x[,1])
favstats(impactData[1,Distress])
library(mosaic)
favstats(impactData[1,Distress])
dis <- favstats(impactData[1,Distress])
library(mosaic)
Distress <- c(1,3,5,7)
Natural <- c(2,4,6,8)
dis <- favstats(impactData[1,Distress])
dis$mean
nat <- favstats(impactData[1, Natural])
nat$mean
library(mosaic)
Distress <- c(1,3,5,7)
Natural <- c(2,4,6,8)
DistLevel <- vector()
NatLevel <- vector()
for(i in 1:391){
dis <- favstats(impactData[i,Distress])
DistLevel[i] <- dis$mean
nat <- favstats(impactData[i, Natural])
NatLevel[i] <- nat$mean
}
impactLevel <- data.frame(Distress = DistLevel, Natural = NatLevel)
impactLevel
boxplot(impactLevel$Distress, impactLevel$Natural)
boxplot(impactLevel$Distress[1:319], impactLevel$Natural[1:319])
boxplot(impactLevel$Distress, impactLevel$Natural)
library(mosaic)
Distress <- c(1,3,5,7)
Natural <- c(2,4,6,8)
DistLevel <- vector()
NatLevel <- vector()
# for(i in 1:391){
# dis <- favstats(impactData[i,Distress])
# DistLevel[i] <- dis$mean
#
# nat <- favstats(impactData[i, Natural])
# NatLevel[i] <- nat$mean
# }
impactLevel <- data.frame(Distress = DistLevel, Natural = NatLevel)
impactLevel
boxplot(impactLevel$Distress, impactLevel$Natural)
boxplot(impactLevel$Distress, impactLevel$Natural)
impactLevel <- data.frame(Distress = DistLevel, Natural = NatLevel)
impactLevel
boxplot(impactLevel$Distress, impactLevel$Natural)
boxplot(impactLevel$Distress[1:319], impactLevel$Natural[1:319])
impactLevel <- data.frame(Distress = DistLevel, Natural = NatLevel)
impactLevel
library(mosaic)
Distress <- c(1,3,5,7)
Natural <- c(2,4,6,8)
DistLevel <- vector()
NatLevel <- vector()
for(i in 1:391){
dis <- favstats(impactData[i,Distress])
DistLevel[i] <- dis$mean
nat <- favstats(impactData[i, Natural])
NatLevel[i] <- nat$mean
}
impactLevel <- data.frame(Distress = DistLevel, Natural = NatLevel)
impactLevel
boxplot(impactLevel$Distress, impactLevel$Natural)
boxplot(impactLevel$Distress[1:319], impactLevel$Natural[1:319])
boxplot(impactLevel$Distress[1:239], impactLevel$Natural[1:239])
boxplot(impactLevel$Distress, impactLevel$Natural)
boxplot(impactLevel$Distress[1:319], impactLevel$Natural[1:319])
boxplot(impactLevel$Distress[1:239], impactLevel$Natural[1:239])
?boxplot
boxplot(impactLevel$Distress, impactLevel$Natural, names = c("Distress", "Natural"))
boxplot(impactLevel$Distress, impactLevel$Natural, names = c("Distress", "Natural"))
boxplot(impactLevel$Distress[1:319], impactLevel$Natural[1:319],names = c("Distress", "Natural"))
boxplot(impactLevel$Distress[1:239], impactLevel$Natural[1:239],names = c("Distress", "Natural")
UserIDs$category[127] <- "ForYou"
UserIDs$category[127] <- "ForYou"
UserIDs$category[112] <- "ForYou"
UserIDs$category[106] <- "ForYou"
UserIDs$category[99] <- "ForYou"
write.csv(UserIDs,"UserIDs.csv", row.names = FALSE)
write.csv(UserIDs,"UserIDs.csv", row.names = TRUE)
getwd()
my_data <- read.delim("transCSSR-master/CSSR-Data/cssrData-1.txt")
my_data
View(my_data)
my_data[1:104]
my_data[1:104,]
train<- my_data[1:104,]
View(train)
test <- my_data[105:118]
test <- my_data[105:118,]
View(test)
writeLines(train, "trainEX.txt") #sprintf("Train-%s.txt", user.index[i]))
string.binary <- vector()
for(i in 1:104){
string.binary[i] <- paste0(my_data[i,], collapse = "") # cssr modeling
}
writeLines(string.binary, "trainEX.txt") #sprintf("Train-%s.txt", user.index[i]))
#my_data <- read.delim("transCSSR-master/CSSR-Data/cssrData-1.txt")
my_data <- read.delim("BinSeq-MatrixWSpaces/matrix-1.txt")
string.binary <- vector()
for(i in 1:104){
string.binary[i] <- paste0(my_data[i,], collapse = "") # cssr modeling
}
writeLines(string.binary, "trainEX.txt") #sprintf("Train-%s.txt", user.index[i]))
user.index <- c(1:136)
data <- read.delim("BinSeq-MatrixWSpaces/*")
user.index <- c(1:136)
data <- Sys.glob("BinSeq-MatrixWSpaces/*")
Train <- vector()
Test <- vector()
#for(n in 1:length(data)){
for(n in c(1)){
mat <- read.delim(data[n])
Train <- vector()
Test <- vector()
for(i in 1:104){
Train[i] <- paste0(mat[i,], collapse = "")
}
writeLines(Train, sprintf("Train-%s.txt", user.index[i]))
for(i in 105:118){
Test[i] <- paste0(mat[i,], collapse = "")
}
writeLines(Test,sprintf("Test-%s.txt", user.index[i]))
}
user.index <- c(1:136)
data <- Sys.glob("BinSeq-MatrixWSpaces/*")
Train <- vector()
Test <- vector()
#for(n in 1:length(data)){
for(n in c(1)){
mat <- read.delim(data[n])
Train <- vector()
Test <- vector()
for(i in 1:104){
Train[i] <- paste0(mat[i,], collapse = "")
}
writeLines(Train, sprintf("Train-%s.txt", user.index[n]))
for(i in 105:118){
Test[i-104] <- paste0(mat[i,], collapse = "")
}
writeLines(Test,sprintf("Test-%s.txt", user.index[n]))
}
user.index <- c(1:136)
data <- Sys.glob("BinSeq-MatrixWSpaces/*")
Train <- vector()
Test <- vector()
for(n in 1:length(data)){
#for(n in c(1)){
mat <- read.delim(data[n])
Train <- vector()
Test <- vector()
for(i in 1:104){
Train[i] <- paste0(mat[i,], collapse = "")
}
writeLines(Train, sprintf("Train-%s.txt", user.index[n]))
for(i in 105:118){
Test[i-104] <- paste0(mat[i,], collapse = "")
}
writeLines(Test,sprintf("Test-%s.txt", user.index[n]))
}
